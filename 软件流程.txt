发送者（被动方）：

1、等待接收者请求文件信息。
2、收到接收者的文件信息请求后，获取文件大小，并将文件大小发送给接收者。
3、根据接收者的请求，发送一个数据包给接收者。
4、将文件分片，分次发送给接收者，每次计算数据包的CRC校验值，并将其附加到数据包中。


接收者（主动方）：

1、主动向发送者发送文件信息请求，请求获取文件大小。
2、接收发送者返回的文件大小信息。
3、根据自身能力，在一定数据长度范围内定义一个周期，周期性地向发送者请求数据包。
4、接收发送者发送的数据包和附带的CRC校验值。
5、验证数据包的CRC校验值，如果校验失败，则重新请求该数据包。
6、如果校验成功，则将数据包写入文件。并请求下一个数据包，否则继续请求该数据包。
7、根据自身需要，继续发送下一个请求或结束文件传输。

数据帧类：
数据帧格式：cmd(1)+datalen(2)+data(n)+crc/校验和(2)

cmd=0x61,data=[0xAA]，表示接收者请求发送者文件大小，发送者需要回复文件总大小。
cmd=0x62,data=文件总大小，用4字节表示，单位为byte。发送者在收到接收者请求文件大小后，计算出文件总大小，并用4字节的方式回复给接收者。
cmd=0x63,data1=请求数据的地址（基于文件开头的偏移量，4byte），data2=请求数据的长度，2byte（0-65535byte）。接收者主动向发送者请求指定地址和长度的数据。
cmd=0x64,data=发送的实际数据，长度等于请求的值。发送者根据接收者的请求，发送指定地址和长度的数据给接收者。

cmd=0x51,data=0xAA。接收端主动向发送端请求文件名，发送端需要回复文件名。
cmd=0x52,data=发送端回复的文件名，长度不定，最大长度为255byte。接收端在收到发送端请求文件名后，开始文件接收流程。
cmd=0x52,data=空,表示发送端已经发送完毕，接收端可以退出程序了。

文件管理类：分发送端和接收端两个对象
1、该类的作用用于管理多个文件的传输，多个文件需要依次传输，需要协同发送端和接收端，以及数据帧类。
2、发送端输入参数为一个文件夹路径，类会自动扫描该文件夹下的所有文件，并将文件名和文件大小保存到一个列表中，并且列表最后一个元素为一个空文件名，表示发送完毕。
3、接收端输入参数为一个文件夹路径，类会自动创建该文件夹，并将接收到的文件保存到该文件夹下
4、接收端对象创建后，会自动向发送端请求文件名，发送端会回复文件名，接收端会根据文件名创建文件，然后开始接收文件。
5、接收端接收到文件后，会自动向发送端请求下一个文件名，发送端会回复文件名，接收端会根据文件名创建文件，然后开始接收文件。
6、接收端会不断请求文件名，直到发送端回复空文件名，表示发送端已经发送完毕，接收端可以退出程序了。
7、发送端会不断接收接收端的请求，直到发送端给接收端了空文件名，表示发送端已经发送完毕，接收端可以退出程序了。




测试发送：
51：51 01 00 aa aa 00
61：61 01 00 aa aa 00

63: 63 06 00 00 00 00 00 0A 00 06 BB